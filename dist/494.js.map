{"version":3,"file":"494.js","mappings":"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","sources":["webpack://sleact-ts-front/./hooks/useInput.ts","webpack://sleact-ts-front/./components/Menu/styles.tsx","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/styles.tsx","webpack://sleact-ts-front/./pages/DirectMessage/styles.tsx","webpack://sleact-ts-front/./components/ChatBox/styles.tsx","webpack://sleact-ts-front/./components/ChatBox/index.tsx","webpack://sleact-ts-front/./components/ChatList/styles.tsx","webpack://sleact-ts-front/./components/Chat/styles.tsx","webpack://sleact-ts-front/./components/Chat/index.tsx","webpack://sleact-ts-front/./components/ChatList/index.tsx","webpack://sleact-ts-front/./utils/makeSection.ts","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./components/Modal/styles.tsx","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./components/InviteChannelModal/index.tsx","webpack://sleact-ts-front/./pages/Channel/index.tsx","webpack://sleact-ts-front/./pages/DirectMessage/index.tsx","webpack://sleact-ts-front/./components/CreateChannelModal/index.tsx","webpack://sleact-ts-front/./components/InviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/DMList/styles.tsx","webpack://sleact-ts-front/./components/ChannelList/index.tsx","webpack://sleact-ts-front/./components/DMList/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx","webpack://sleact-ts-front/./pages/SignUp/styles.tsx","webpack://sleact-ts-front/./utils/fetcher.ts"],"sourcesContent":["import { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from \"react\";\r\n\r\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\r\n  const [value, setValue] = useState(initialData);\r\n  const handler = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value as unknown as T),\r\n    [],\r\n  );\r\n  return [value, handler, setValue];\r\n};\r\n\r\nexport default useInput;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { FC, CSSProperties, useCallback } from \"react\";\r\nimport { CloseModalButton, CreateMenu } from \"./styles\";\r\n\r\ninterface IMenu {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Menu: FC<IMenu> = ({ children, style, show, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation;\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  height: calc(100vh - 38px);\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 64px;\r\n  display: flex;\r\n  width: 100%;\r\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n  box-shadow: 0 1px 0 var(--saf-0);\r\n  padding: 20px 16px 20px 20px;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport const DragOver = styled.div`\r\n  position: absolute;\r\n  top: 64px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 64px);\r\n  background: white;\r\n  opacity: 0.7;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { MentionsInput } from \"react-mentions\";\r\n\r\nexport const ChatArea = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 20px;\r\n  padding-top: 0;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  color: rgb(29, 28, 29);\r\n  font-size: 15px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid rgb(29, 28, 29);\r\n`;\r\n\r\nexport const MentionsTextarea = styled(MentionsInput)`\r\n  font-family: Slack-Lato, appleLogo, sans-serif;\r\n  font-size: 15px;\r\n  padding: 8px 9px;\r\n  width: 100%;\r\n  & strong {\r\n    background: skyblue;\r\n  }\r\n  & textarea {\r\n    height: 44px;\r\n    padding: 9px 10px !important;\r\n    outline: none !important;\r\n    border-radius: 4px !important;\r\n    resize: none !important;\r\n    line-height: 22px;\r\n    border: none;\r\n  }\r\n  & ul {\r\n    border: 1px solid lightgray;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    padding: 9px 10px;\r\n    background: white;\r\n    border-radius: 4px;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const Toolbox = styled.div`\r\n  position: relative;\r\n  background: rgb(248, 248, 248);\r\n  height: 41px;\r\n  display: flex;\r\n  border-top: 1px solid rgb(221, 221, 221);\r\n  align-items: center;\r\n  border-bottom-left-radius: 4px;\r\n  border-bottom-right-radius: 4px;\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 5px;\r\n`;\r\n\r\nexport const EachMention = styled.button<{ focus: boolean }>`\r\n  padding: 4px 20px;\r\n  background: transparent;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  color: rgb(28, 29, 28);\r\n  width: 100%;\r\n  & img {\r\n    margin-right: 5px;\r\n  }\r\n  ${({ focus }) =>\r\n    focus &&\r\n    `\r\n    background: #1264a3;\r\n    color: white;\r\n  `};\r\n`;\r\n","import React, { useCallback, useEffect, useRef, VFC } from \"react\";\r\nimport {\r\n  ChatArea,\r\n  Form,\r\n  MentionsTextarea,\r\n  Toolbox,\r\n  SendButton,\r\n  EachMention,\r\n} from \"@components/ChatBox/styles\";\r\nimport autosize from \"autosize\";\r\nimport { Mention, SuggestionDataItem } from \"react-mentions\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IUser } from \"@typings/db\";\r\nimport gravatar from \"gravatar\";\r\n\r\ninterface Props {\r\n  chat: string;\r\n  onSubmitForm: (e: any) => void;\r\n  onChangeChat: (e: any) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst ChatBox: VFC<Props> = ({ chat, onSubmitForm, onChangeChat, placeholder }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser | false>(\"/api/users\", fetcher, { dedupingInterval: 2000 });\r\n  const { data: memberData } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      autosize(textareaRef.current);\r\n    }\r\n  }, []);\r\n  const onKeyDownChat = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        if (!e.shiftKey) {\r\n          e.preventDefault();\r\n          onSubmitForm(e);\r\n        }\r\n      }\r\n    },\r\n    [onSubmitForm],\r\n  );\r\n\r\n  const renderSuggestion = useCallback(\r\n    (\r\n      suggestion: SuggestionDataItem,\r\n      search: string,\r\n      highlightedDisplay: React.ReactNode,\r\n      index: number,\r\n      focus: boolean,\r\n    ): React.ReactNode => {\r\n      if (!memberData) return;\r\n      return (\r\n        <EachMention focus={focus}>\r\n          <img\r\n            src={gravatar.url(memberData[index].email, { s: \"20px\", d: \"retro\" })}\r\n            alt={memberData[index].nickname}\r\n          />\r\n          <span>{highlightedDisplay}</span>\r\n        </EachMention>\r\n      );\r\n    },\r\n    [memberData],\r\n  );\r\n\r\n  return (\r\n    <ChatArea>\r\n      <Form onSubmit={onSubmitForm}>\r\n        <MentionsTextarea\r\n          id=\"editor-chat\"\r\n          value={chat}\r\n          onChange={onChangeChat}\r\n          onKeyDown={onKeyDownChat}\r\n          placeholder={placeholder}\r\n          inputRef={textareaRef}\r\n          allowSuggestionsAboveCursor\r\n        >\r\n          <Mention\r\n            appendSpaceOnAdd\r\n            trigger=\"@\"\r\n            data={memberData?.map((v) => ({ id: v.id, display: v.nickname })) || []}\r\n            renderSuggestion={renderSuggestion}\r\n          />\r\n        </MentionsTextarea>\r\n        <Toolbox>\r\n          <SendButton\r\n            className={\r\n              \"c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send\" +\r\n              (chat?.trim() ? \"\" : \" c-texty_input__button--disabled\")\r\n            }\r\n            data-qa=\"texty_send_button\"\r\n            aria-label=\"Send message\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"submit\"\r\n            disabled={!chat?.trim()}\r\n          >\r\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\"></i>\r\n          </SendButton>\r\n        </Toolbox>\r\n      </Form>\r\n    </ChatArea>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ChatZone = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  margin-top: 20px;\r\n  border-top: 1px solid #eee;\r\n`;\r\n\r\nexport const StickyHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex: 1;\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 14px;\r\n  & button {\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    height: 28px;\r\n    line-height: 27px;\r\n    padding: 0 16px;\r\n    z-index: 2;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\r\n    border-radius: 24px;\r\n    position: relative;\r\n    top: -13px;\r\n    background: white;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ChatWrapper = styled.div`\r\n  display: flex;\r\n  padding: 8px 20px;\r\n  &:hover {\r\n    background: #eee;\r\n  }\r\n  & .chat-img {\r\n    display: flex;\r\n    width: 36px;\r\n    margin-right: 8px;\r\n    & img {\r\n      width: 36px;\r\n      height: 36px;\r\n    }\r\n  }\r\n`;\r\n","import { IChat, IDM } from \"@typings/db\";\r\nimport React, { VFC, memo, useMemo } from \"react\";\r\nimport { ChatWrapper } from \"./styles\";\r\nimport gravatar from \"gravatar\";\r\nimport dayjs from \"dayjs\";\r\nimport regexifyString from \"regexify-string\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  data: IDM | IChat;\r\n}\r\nconst Chat: VFC<Props> = ({ data }) => {\r\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\r\n  const user = \"Sender\" in data ? data.Sender : data.User;\r\n\r\n  const result = useMemo(\r\n    () =>\r\n      regexifyString({\r\n        input: data.content,\r\n        pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\r\n        decorator(match, index) {\r\n          const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\r\n          if (arr) {\r\n            return (\r\n              <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\r\n                @{arr[1]}\r\n              </Link>\r\n            );\r\n          }\r\n          return <br key={index} />;\r\n        },\r\n      }),\r\n    [data.content],\r\n  );\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <div className=\"chat-img\">\r\n        <img src={gravatar.url(user.email, { s: \"36px\", d: \"retro\" })} alt={user.nickname} />\r\n      </div>\r\n      <div className=\"chat-text\">\r\n        <div className=\"chat-user\">\r\n          <b>{user.nickname}</b>\r\n          <span>{dayjs(data.createdAt).format(\"h:mm A\")}</span>\r\n        </div>\r\n        <p>{result}</p>\r\n      </div>\r\n    </ChatWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(Chat);\r\n","import React, { forwardRef, MutableRefObject, RefObject, useCallback, useRef, VFC } from \"react\";\r\nimport { ChatZone, Section, StickyHeader } from \"@components/ChatList/styles\";\r\nimport { IChat, IDM } from \"@typings/db\";\r\nimport Chat from \"@components/Chat\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\ninterface Props {\r\n  chatSections: { [key: string]: (IDM | IChat)[] };\r\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\r\n  isEmpty: boolean;\r\n  isReachingEnd: boolean;\r\n  scrollbarRef: RefObject<Scrollbars>;\r\n}\r\n\r\nconst ChatList = forwardRef<Scrollbars, Props>(\r\n  ({ chatSections, setSize, isEmpty, isReachingEnd, scrollbarRef }, scrollRef) => {\r\n    const onScroll = useCallback((values) => {\r\n      if (values.scrollTop === 0 && !isReachingEnd) {\r\n        console.log(\"top\");\r\n        setSize((prev) => prev + 1).then(() => {\r\n          // 스크롤 위치 유지\r\n          const current = (scrollRef as MutableRefObject<Scrollbars>)?.current;\r\n          if (current) {\r\n            current.scrollTop(current.getScrollHeight() - values.scrollHeight);\r\n          }\r\n        });\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <ChatZone>\r\n        <Scrollbars autoHide ref={scrollRef} onScrollFrame={onScroll}>\r\n          {Object.entries(chatSections).map(([date, chats]) => {\r\n            return (\r\n              <Section className={`section-${date}`} key={date}>\r\n                <StickyHeader>\r\n                  <button>{date}</button>\r\n                </StickyHeader>\r\n                {chats.map((chat) => (\r\n                  <Chat key={chat.id} data={chat} />\r\n                ))}\r\n              </Section>\r\n            );\r\n          })}\r\n        </Scrollbars>\r\n      </ChatZone>\r\n    );\r\n  },\r\n);\r\n\r\nexport default ChatList;\r\n","import { IDM, IChat } from \"@typings/db\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function makeSection(chatList: (IDM | IChat)[]) {\r\n  const sections: { [key: string]: (IDM | IChat)[] } = {};\r\n  chatList.forEach((chat) => {\r\n    const monthDate = dayjs(chat.createdAt).format(\"YYYY-MM-DD\");\r\n    if (Array.isArray(sections[monthDate])) {\r\n      sections[monthDate].push(chat);\r\n    } else sections[monthDate] = [chat];\r\n  });\r\n  return sections;\r\n}\r\n","import io from \"socket.io-client\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst backUrl = \"http://localhost:3095\";\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  console.log(\"rerendered\", workspace);\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io.connect(`${backUrl}/ws-${workspace}`, {\r\n      transports: [\"websocket\"],\r\n    });\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CloseModalButton } from \"@components/Menu/styles\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport { CreateModal } from \"./styles\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Modal: FC<Props> = ({ show, children, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\nModal.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from \"@components/Modal\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport { Button, Input, Label } from \"@pages/SignUp/styles\";\r\nimport { IChannel, IUser } from \"@typings/db\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, VFC } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport useSWR from \"swr\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteChannelModal: VFC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput(\"\");\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { data: userData } = useSWR<IUser | false>(\"/api/users\", fetcher);\r\n  const { mutate: memberMutate } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels/${channel}/members`,\r\n          { email: newMember },\r\n          { withCredentials: true },\r\n        )\r\n        .then((response) => {\r\n          memberMutate(response.data, false);\r\n          setShowInviteChannelModal(false);\r\n          setNewMember(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: \"bottom-center\" });\r\n        });\r\n    },\r\n    [channel, newMember, memberMutate, setNewMember, setShowInviteChannelModal, workspace],\r\n  );\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널 멤버 초대</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import Workspace from \"@layouts/Workspace\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Container, Header } from \"@pages/DirectMessage/styles\";\r\nimport useSWR from \"swr\";\r\nimport useSWRInfinite from \"swr/infinite\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport gravatar from \"gravatar\";\r\nimport { IChannel, IChat, IUser } from \"@typings/db\";\r\nimport ChatBox from \"@components/ChatBox\";\r\nimport ChatList from \"@components/ChatList\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport makeSection from \"@utils/makeSection\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport useSocket from \"@hooks/useSocket\";\r\nimport InviteChannelModal from \"@components/InviteChannelModal\";\r\n\r\nconst PAGE_SIZE = 20;\r\nconst Channel = () => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { data: myData } = useSWR<IUser>(\"/api/users\", fetcher);\r\n  const [chat, onChangeChat, setChat] = useInput(\"\");\r\n  const { data: channelData } = useSWR<IChannel>(\r\n    `/api/workspaces/${workspace}/channels/${channel}`,\r\n    fetcher,\r\n  );\r\n  const {\r\n    data: chatData,\r\n    mutate: mutateChat,\r\n    setSize,\r\n  } = useSWRInfinite<IChat[]>(\r\n    (index) =>\r\n      `/api/workspaces/${workspace}/channels/${channel}/chats?perPage=${PAGE_SIZE}&page=${\r\n        index + 1\r\n      }`,\r\n    fetcher,\r\n  );\r\n  const { data: channelMembersData } = useSWR<IUser[]>(\r\n    myData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const [socket] = useSocket(workspace);\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd =\r\n    isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE) || false;\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(chat);\r\n      if (chat?.trim() && chatData && myData && channelData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            UserId: myData.id,\r\n            User: myData,\r\n            ChannelId: channelData.id,\r\n            Channel: channelData,\r\n            createdAt: new Date(),\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          setChat(\"\");\r\n          scrollbarRef.current?.scrollToBottom();\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/channels/${channel}/chats`, { content: chat })\r\n          .then(() => {\r\n            mutateChat();\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, chatData, myData, channelData, workspace, channel],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IChat) => {\r\n      //id 는 상대방 아이디\r\n      if (data.Channel.name === channel || data.UserId !== myData?.id) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log(\"scrollToBottom!\", scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 50);\r\n            }\r\n            //  else {\r\n            //   toast.success(\"새 메시지가 도착했습니다.\", {\r\n            //     onClick() {\r\n            //       scrollbarRef.current?.scrollToBottom();\r\n            //     },\r\n            //     closeOnClick: true,\r\n            //   });\r\n            // }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [myData, channel],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"message\", onMessage);\r\n    return () => {\r\n      socket?.off(\"message\", onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  //로딩시 스크롤바 제일 아래로\r\n  useEffect(() => {\r\n    if (chatData?.length === 1) {\r\n      scrollbarRef.current?.scrollToBottom();\r\n      setTimeout(() => {\r\n        console.log(\"scrollbar\", scrollbarRef.current);\r\n        scrollbarRef.current?.scrollToBottom();\r\n      }, 500);\r\n    }\r\n  }, [chatData]);\r\n\r\n  const onClickInviteChannel = useCallback(() => {\r\n    setShowInviteChannelModal(true);\r\n  }, []);\r\n  const onCloseModal = useCallback(() => {\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  if (!myData || !myData) {\r\n    return null;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <span>#{channel}</span>\r\n        <div\r\n          style={{ display: \"flex\", flex: 1, justifyContent: \"flex-end\", alignItems: \"center\" }}\r\n          className=\"header-right\"\r\n        >\r\n          <span>{channelMembersData?.length}</span>\r\n          <button\r\n            onClick={onClickInviteChannel}\r\n            className=\"c-button-unstyled p-ia__view_header__button\"\r\n            aria-label=\"Add people to #react-native\"\r\n            data-sk=\"tooltip_parent\"\r\n            type=\"button\"\r\n          >\r\n            <i\r\n              className=\"c-icon p-ia__view_header__button_icon c-icon--add-user\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </Header>\r\n      <ChatList\r\n        chatSections={chatSections}\r\n        ref={scrollbarRef}\r\n        setSize={setSize}\r\n        isEmpty={isEmpty}\r\n        isReachingEnd={isReachingEnd}\r\n        scrollbarRef={scrollbarRef}\r\n      />\r\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n","import Workspace from \"@layouts/Workspace\";\r\nimport React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { Container, Header } from \"@pages/DirectMessage/styles\";\r\nimport useSWR from \"swr\";\r\nimport useSWRInfinite from \"swr/infinite\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport gravatar from \"gravatar\";\r\nimport { IDM, IUser } from \"@typings/db\";\r\nimport ChatBox from \"@components/ChatBox\";\r\nimport ChatList from \"@components/ChatList\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport makeSection from \"@utils/makeSection\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport useSocket from \"@hooks/useSocket\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst PAGE_SIZE = 20;\r\nconst DirectMessage = () => {\r\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\r\n  const { data: myData } = useSWR<IUser>(\"/api/users\", fetcher);\r\n  const { data: userData } = useSWR<IUser>(`/api/workspaces/${workspace}/users/${id}`, fetcher);\r\n  const [chat, onChangeChat, setChat] = useInput(\"\");\r\n  const {\r\n    data: chatData,\r\n    mutate: mutateChat,\r\n    setSize,\r\n  } = useSWRInfinite<IDM[]>(\r\n    (index) =>\r\n      `/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\r\n    fetcher,\r\n  );\r\n\r\n  const [socket] = useSocket(workspace);\r\n  const isEmpty = chatData?.[0]?.length === 0;\r\n  const isReachingEnd =\r\n    isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE) || false;\r\n\r\n  const scrollbarRef = useRef<Scrollbars>(null);\r\n\r\n  const onSubmitForm = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(chat);\r\n      if (chat?.trim() && chatData && userData && myData) {\r\n        const savedChat = chat;\r\n        mutateChat((prevChatData) => {\r\n          prevChatData?.[0].unshift({\r\n            id: (chatData[0][0]?.id || 0) + 1,\r\n            content: savedChat,\r\n            SenderId: myData.id,\r\n            Sender: myData,\r\n            ReceiverId: userData.id,\r\n            Receiver: userData,\r\n            createdAt: new Date(),\r\n          });\r\n          return prevChatData;\r\n        }, false).then(() => {\r\n          setChat(\"\");\r\n          scrollbarRef.current?.scrollToBottom();\r\n        });\r\n        axios\r\n          .post(`/api/workspaces/${workspace}/dms/${id}/chats`, { content: chat })\r\n          .then(() => {\r\n            mutateChat();\r\n          })\r\n          .catch(console.error);\r\n      }\r\n    },\r\n    [chat, chatData, myData, userData, workspace, id],\r\n  );\r\n\r\n  const onMessage = useCallback(\r\n    (data: IDM) => {\r\n      //id 는 상대방 아이디\r\n      if (data.SenderId === Number(id) && myData?.id !== Number(id)) {\r\n        mutateChat((chatData) => {\r\n          chatData?.[0].unshift(data);\r\n          return chatData;\r\n        }, false).then(() => {\r\n          if (scrollbarRef.current) {\r\n            if (\r\n              scrollbarRef.current.getScrollHeight() <\r\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\r\n            ) {\r\n              console.log(\"scrollToBottom!\", scrollbarRef.current?.getValues());\r\n              setTimeout(() => {\r\n                scrollbarRef.current?.scrollToBottom();\r\n              }, 100);\r\n            }\r\n            //  else {\r\n            //   toast.success(\"새 메시지가 도착했습니다.\", {\r\n            //     onClick() {\r\n            //       scrollbarRef.current?.scrollToBottom();\r\n            //     },\r\n            //     closeOnClick: true,\r\n            //   });\r\n            // }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [id, myData, mutateChat],\r\n  );\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"dm\", onMessage);\r\n    return () => {\r\n      socket?.off(\"dm\", onMessage);\r\n    };\r\n  }, [socket, onMessage]);\r\n\r\n  //로딩시 스크롤바 제일 아래로\r\n  useEffect(() => {\r\n    if (chatData?.length === 1) {\r\n      scrollbarRef.current?.scrollToBottom();\r\n    }\r\n  }, [chatData]);\r\n\r\n  if (!userData || !myData) {\r\n    return null;\r\n  }\r\n\r\n  const chatSections = makeSection(chatData ? chatData.flat().reverse() : []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <img\r\n          src={gravatar.url(userData.email, { s: \"24px\", d: \"retro\" })}\r\n          alt={userData.nickname}\r\n        />\r\n        <span>{userData.nickname}</span>\r\n      </Header>\r\n      <ChatList\r\n        chatSections={chatSections}\r\n        ref={scrollbarRef}\r\n        setSize={setSize}\r\n        isEmpty={isEmpty}\r\n        isReachingEnd={isReachingEnd}\r\n        scrollbarRef={scrollbarRef}\r\n      />\r\n      <ChatBox chat={chat} onChangeChat={onChangeChat} onSubmitForm={onSubmitForm} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DirectMessage;\r\n","import Modal from \"@components/Modal\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport { Button, Input, Label } from \"@pages/SignUp/styles\";\r\nimport { IChannel, IUser } from \"@typings/db\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, VFC } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport useSWR from \"swr\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput(\"\");\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const { data: userData } = useSWR<IUser | false>(\"/api/users\", fetcher);\r\n  const { mutate: channelMutate } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newChannel || !newChannel.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/channels`,\r\n          { name: newChannel },\r\n          { withCredentials: true },\r\n        )\r\n        .then((response) => {\r\n          channelMutate();\r\n          setShowCreateChannelModal(false);\r\n          setNewChannel(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: \"bottom-center\" });\r\n        });\r\n    },\r\n    [newChannel, channelMutate, setNewChannel, setShowCreateChannelModal, workspace],\r\n  );\r\n\r\n  if (!show) return null;\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널 이름</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import Modal from \"@components/Modal\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport { Button, Input, Label } from \"@pages/SignUp/styles\";\r\nimport { IChannel, IUser } from \"@typings/db\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, VFC } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport useSWR from \"swr\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\n\r\nconst InviteWorkspaceModal: VFC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput(\"\");\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  console.log(workspace);\r\n  const { data: userData } = useSWR<IUser | false>(\"/api/users\", fetcher);\r\n  const { mutate: memberMutate } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(\r\n          `/api/workspaces/${workspace}/members`,\r\n          { email: newMember },\r\n          { withCredentials: true },\r\n        )\r\n        .then((response) => {\r\n          memberMutate(response.data, false);\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: \"bottom-center\" });\r\n        });\r\n    },\r\n    [newMember, workspace, memberMutate, setShowInviteWorkspaceModal, setNewMember],\r\n  );\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"channel-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import { CollapseButton } from \"@components/DMList/styles\";\r\n// import EachChannel from \"@components/EachChannel\";\r\nimport { IChannel, IUser } from \"@typings/db\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport React, { FC, useCallback, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst ChannelList: FC = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  // const [socket] = useSocket(workspace);\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser>(\"/api/users\", fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return (\r\n              <NavLink\r\n                key={channel.name}\r\n                className={({ isActive }) => (isActive ? \"selected\" : \"not\")}\r\n                to={`/workspace/${workspace}/channel/${channel.name}`}\r\n              >\r\n                <span># {channel.name}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","// import EachDM from \"@components/EachDM\";\r\n// import useSocket from \"@hooks/useSocket\";\r\nimport useSocket from \"@hooks/useSocket\";\r\nimport { IDM, IUser, IUserWithOnline } from \"@typings/db\";\r\nimport fetcher from \"@utils/fetcher\";\r\nimport React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { CollapseButton } from \"./styles\";\r\n\r\nconst DMList = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const { data: userData } = useSWR<IUser>(\"/api/users\", fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"DMList: workspace 바꼈다\", workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"onlineList\", (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    // console.log(\"socket on dm\", socket?.hasListeners(\"dm\"), socket);\r\n    return () => {\r\n      // console.log(\"socket off dm\", socket?.hasListeners(\"dm\"));\r\n      socket?.off(\"onlineList\");\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return (\r\n              <NavLink\r\n                key={member.id}\r\n                className={({ isActive }) => (isActive ? \"selected\" : \"not\")}\r\n                to={`/workspace/${workspace}/dm/${member.id}`}\r\n              >\r\n                <i\r\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n                    isOnline\r\n                      ? \"c-presence--active c-icon--presence-online\"\r\n                      : \"c-icon--presence-offline\"\r\n                  }`}\r\n                  aria-hidden=\"true\"\r\n                  data-qa=\"presence_indicator\"\r\n                  data-qa-presence-self=\"false\"\r\n                  data-qa-presence-active=\"false\"\r\n                  data-qa-presence-dnd=\"false\"\r\n                />\r\n                <span>{member.nickname}</span>\r\n                {member.id === userData?.id && <span> (나)</span>}\r\n              </NavLink>\r\n            );\r\n          })}\r\n        {/* {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\r\n          })} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import fetcher from \"@utils/fetcher\";\r\nimport axios from \"axios\";\r\nimport React, { FC, useCallback, useEffect, useState, VFC } from \"react\";\r\nimport { Navigate, Route, Routes, useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport Menu from \"@components/Menu\";\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from \"@layouts/Workspace/styles\";\r\nimport { IChannel, IUser } from \"@typings/db\";\r\nimport gravatar from \"gravatar\";\r\nimport Channel from \"@pages/Channel\";\r\nimport DirectMessage from \"@pages/DirectMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Input, Label } from \"@pages/SignUp/styles\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport Modal from \"@components/Modal\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport CreateChannelModal from \"@components/CreateChannelModal\";\r\nimport InviteWorkspaceModal from \"@components/InviteWorkspaceModal\";\r\nimport InviteChannelModal from \"@components/InviteChannelModal\";\r\nimport ChannelList from \"@components/ChannelList\";\r\nimport DMList from \"@components/DMList\";\r\nimport useSocket from \"@hooks/useSocket\";\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput(\"\");\r\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput(\"\");\r\n\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const {\r\n    data: userData,\r\n    error,\r\n    mutate,\r\n  } = useSWR<IUser | false>(\"/api/users\", fetcher, { dedupingInterval: 2000 });\r\n  const { data: channelData } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n  const { data: memberData } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket, disconnect] = useSocket(workspace);\r\n\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      console.log(socket);\r\n      socket.emit(\"login\", { id: userData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, channelData, userData]);\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace, disconnect]);\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios.post(\"/api/users/logout\", null, { withCredentials: true }).then(() => {\r\n      mutate();\r\n    });\r\n  }, [mutate]);\r\n\r\n  const onClickUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post(\r\n          \"/api/workspaces\",\r\n          { workspace: newWorkspace, url: newUrl },\r\n          { withCredentials: true },\r\n        )\r\n        .then((response) => {\r\n          mutate(response.data, false);\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace(\"\");\r\n          setNewUrl(\"\");\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: \"bottom-center\" });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n    setShowInviteChannelModal(false);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteWorkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return (\r\n      <Routes>\r\n        <Route path=\"/*\" element={<Navigate replace to=\"/login\" />} />\r\n      </Routes>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <RightMenu>\r\n          <span onClick={onClickUserProfile}>\r\n            <ProfileImg\r\n              src={gravatar.url(userData.email, { s: \"28px\", d: \"retro\" })}\r\n              alt={userData.nickname}\r\n            />\r\n            {showUserMenu && (\r\n              <Menu\r\n                style={{ right: 0, top: 38 }}\r\n                show={showUserMenu}\r\n                onCloseModal={onClickUserProfile}\r\n              >\r\n                <ProfileModal>\r\n                  <img\r\n                    src={gravatar.url(userData.email, { s: \"36px\", d: \"retro\" })}\r\n                    alt={userData.nickname}\r\n                  />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </span>\r\n        </RightMenu>\r\n      </Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData?.Workspaces?.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>sleact</WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu\r\n              style={{ top: 95, left: 80 }}\r\n              show={showWorkspaceModal}\r\n              onCloseModal={toggleWorkspaceModal}\r\n            >\r\n              <WorkspaceModal>\r\n                <h2>Sleact</h2>\r\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Routes>\r\n            <Route path=\"/channel/:channel\" element={<Channel />} />\r\n            <Route path=\"/dm/:id\" element={<DirectMessage />} />\r\n          </Routes>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n      />\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      {/* <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      /> */}\r\n      <ToastContainer position=\"bottom-center\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\r\n  font-weight: 700;\r\n  font-size: 48px;\r\n  line-height: 46px;\r\n  letter-spacing: -0.75px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  max-width: 400px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 16px;\r\n  & > span {\r\n    display: block;\r\n    text-align: left;\r\n    padding-bottom: 8px;\r\n    font-size: 15px;\r\n    cursor: pointer;\r\n    line-height: 1.46666667;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-radius: 4px;\r\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\r\n  border: 1px solid var(--saf-0);\r\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px;\r\n  width: 100%;\r\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\r\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\r\n  padding: 12px;\r\n  height: 44px;\r\n  padding-top: 11px;\r\n  padding-bottom: 13px;\r\n  font-size: 18px;\r\n  line-height: 1.33333333;\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-bottom: 12px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  color: #fff;\r\n  background-color: #4a154b;\r\n  border: none;\r\n  font-size: 18px;\r\n  font-weight: 900;\r\n  height: 44px;\r\n  min-width: 96px;\r\n  padding: 0 16px 3px;\r\n  transition: all 80ms linear;\r\n  user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\r\n  &:hover {\r\n    background-color: rgba(74, 21, 75, 0.9);\r\n    border: none;\r\n  }\r\n  &:focus {\r\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  color: #e01e5a;\r\n  margin: 8px 0 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Success = styled.div`\r\n  color: #2eb67d;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const LinkContainer = styled.p`\r\n  font-size: 13px;\r\n  color: #616061;\r\n  margin: 0 auto 8px;\r\n  width: 400px;\r\n  max-width: 400px;\r\n  & a {\r\n    color: #1264a3;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;","import axios from \"axios\";\r\n\r\nconst fetcher = <Data>(url: string) =>\r\n  axios\r\n    .get<Data>(url, {\r\n      withCredentials: true,\r\n    })\r\n    .then((response) => response.data);\r\n\r\nexport default fetcher;\r\n"],"names":["initialData","useState","value","setValue","useCallback","e","target","CreateMenu","styled","CloseModalButton","Menu","children","style","show","onCloseModal","closeButton","stopPropagation","onClick","defaultProps","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","Container","ChatArea","Form","MentionsTextarea","MentionsInput","Toolbox","SendButton","EachMention","focus","chat","onSubmitForm","onChangeChat","placeholder","useParams","workspace","channel","useSWR","fetcher","dedupingInterval","userData","data","memberData","error","mutate","textareaRef","useRef","useEffect","current","autosize","onKeyDownChat","key","shiftKey","preventDefault","renderSuggestion","suggestion","search","highlightedDisplay","index","src","gravatar","email","s","d","alt","nickname","onSubmit","id","onChange","onKeyDown","inputRef","allowSuggestionsAboveCursor","appendSpaceOnAdd","trigger","map","v","display","className","trim","type","disabled","ChatZone","Section","StickyHeader","ChatWrapper","Chat","user","Sender","User","result","useMemo","regexifyString","input","content","pattern","decorator","match","arr","to","dayjs","createdAt","format","memo","forwardRef","scrollRef","chatSections","setSize","isReachingEnd","isEmpty","onScroll","scrollbarRef","values","scrollTop","console","log","prev","then","getScrollHeight","scrollHeight","autoHide","ref","onScrollFrame","Object","entries","date","chats","makeSection","chatList","sections","forEach","monthDate","Array","isArray","push","sockets","disconnect","io","transports","undefined","CreateModal","Modal","setShowInviteChannelModal","useInput","newMember","onChangeNewMember","setNewMember","memberMutate","onInviteMember","axios","withCredentials","response","catch","dir","toast","position","myData","setChat","channelData","useSWRInfinite","chatData","mutateChat","channelMembersData","socket","useSocket","length","showInviteChannelModal","savedChat","prevChatData","unshift","UserId","ChannelId","Channel","Date","scrollToBottom","onMessage","name","getClientHeight","getScrollTop","getValues","setTimeout","on","off","onClickInviteChannel","flat","reverse","flex","justifyContent","alignItems","SenderId","ReceiverId","Receiver","Number","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","channelMutate","onCreateChannel","setShowInviteWorkspaceModal","CollapseButton","collapse","channelCollapse","setChannelCollapse","toggleChannelCollapse","isActive","onlineList","setOnlineList","member","isOnline","includes","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","emit","channels","onLogout","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","right","top","ws","slice","toUpperCase","left","path","element","replace","Label","Input","Button","Error","Success","LinkContainer"],"sourceRoot":""}